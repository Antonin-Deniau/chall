data 0 ; COMPARE VARIABLE

int 1 ; get password
set :counter: 0

;0 jeq <addr> TEST [47]
;1 int <num>
;2 xor <a> <b> TO [48]
;3 mov <a> <b>
;4 inc <a>
;5 set <a> <b>
;6 jmp <a>
;7 test <a> <b> TO [47]

check_loop:
    ; SET TWO CHARS (encoded and input)
    incr_1: mov :cmp_a: :encoded:
    incr_2: mov :cmp_b: 60

    ; SET NEXT CHAR
    inc :incr_1: + 2
    inc :incr_2: + 2

    inc :counter:

    ; IF END OF PASS JMP TO VALID
    test :counter: :passlen:
    jeq :valid:
    
    ; IF TWO CHAR VALID CONTINUE LOOP
    test :cmp_a: :cmp_b:
    jeq :check_loop:

    ; IF NOT VALID EXIT
    jmp :invalid:

invalid:
    int 0
    set 0 5

valid:
    int 2
    set 0 5

; VARS " ".join([ord(i) for i in "antonin"])
encoded: data 97 110 116 111 110 105 110
passlen: data 7
counter: data 0
cmp_a: data 0
cmp_b: data 0
