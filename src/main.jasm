data 0 ; COMPARE VARIABLE

int 1 ; get password

check_loop:
    ; SET TWO CHARS (encoded and input)
    incr_1: mov :cmp_a: :encoded:
    incr_2: mov :cmp_b: 60

    ; aditive xor encoding
    xor :cmp_b: :iv:
    mov :iv: :cmp_b:

    ; SET NEXT CHAR
    inc :incr_1: + 2
    inc :incr_2: + 2

    inc :counter:

    ; IF END OF PASS JMP TO VALID
    test :counter: :passlen:
    jeq :valid:
    
    ; IF TWO CHAR VALID CONTINUE LOOP
    test :cmp_a: :cmp_b:
    jeq :check_loop:

    ; IF NOT VALID EXIT
    int 0
    jmp :exit:

valid:
    int 2
exit:
    set 0 5

; VARS " ".join([ord(i) for i in "antonin"])
encoded: data 36 74 62 81 63 86 56
passlen: data 7
counter: data 0
iv: data 69
cmp_a: data 0
cmp_b: data 0
